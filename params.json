{"name":"Autocomplete-Table","tagline":"An autocomplete in the form of table","body":"### Autocomplete - Table\r\nOne major challenge we faced in autocomplete was to display the data in a tabular format. When there are many rows of information available, it was difficult to display the relevant data of a row next to each other. This forced to develop a JQuery plugin which can display the relevant information in a table format.\r\n\r\nThe initialization is simple as like any other plugin\r\n\r\n```\r\nvar myData = $(\"#mytextbox\").tautocomplete();\r\n```\r\n\r\n### Parameters\r\nThe plugin has following parameters,\r\n\r\nTable width, example:\r\n```\r\nwidth: specify the table width\r\n```\r\nTable columns. The first column is always the ID. This should not be mentioned in the parameter, example: \r\n```\r\ncolumns: ['Country', 'Code', 'Capital']\r\n```\r\nCallback function is triggered once a selection is made, example:\r\n```\r\ncallback: function () {alert(\"Selected ID is : text2.id()); }\r\n```\r\nMessage to be displayed when no records found, example: \r\n```\r\nnorecord: \"No Records Found\"\r\n```\r\nData Property for the textbox can also be mentioned, example:\r\n```\r\ndataproperty: {\"mandatory\":\"yes\", \"property\": \"something\"}\r\n```\r\nAllowed inputs in the textbox can be mentioned using Regex, default is:\r\n```\r\nregex: \"^[a-zA-Z0-9\\b]+$\"\r\n```\r\nA callback function which passes the information to be displayed in the autocomplete table.\r\nIn the below example, the textbox is used to search the countries. The function filters the data and passes the relevant information to be shown in the autocomplete-table.\r\n```\r\ndata: function () {\r\n    var data = [\r\n                { \"id\": 1, \"country\": \"Afghanistan\", \"code\": \"AFG\", \"capital\": \"Kabul\" }, \r\n                { \"id\": 2, \"country\": \"Albania\", \"code\": \"ALB\", \"capital\": \"Tirane\" },\r\n                { \"id\": 11, \"country\": \"Azerbaijan\", \"code\": \"AZE\", \"capital\": \"Baku\" }, \r\n                { \"id\": 12, \"country\": \"The Bahamas\", \"code\": \"THA\", \"capital\": \"Nassau\" }];\r\n    var filterData = [];\r\n    var searchData = eval(\"/\" + text2.searchdata() + \"/gi\");\r\n    $.each(data, function(i,v)\r\n    {\r\n      if (v.country.search(new RegExp(searchData)) != -1) {filterData.push(v);}});\r\n      return filterData;\r\n    }\r\n```\r\n\r\n### Properties\r\nThe following Properties are available for the plugin\r\n\r\nid: returns the ID of the selected row\r\n```\r\ntext2.id()\r\n```\r\ntext: returns the TEXT of the selected row\r\n```\r\ntext2.text()\r\n```\r\nsearchdata: returns the text which user is trying to search\r\n```\r\ntext2.searchdata()\r\n```\r\nisNull: returns true if no selection is made\r\n```\r\ntext2.isNull()\r\n```\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Contact @vyasrao and weâ€™ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}